{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///D:/Itla/Proyecto%20final/proyecto-final-tds/src/financia_web/services/UserServices.ts"],"sourcesContent":["import axios, { type AxiosResponse } from \"axios\";\r\nimport type { LoginUser, RegisterUser } from \"../Interfaces/UserInterface\";\r\n\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL as string;\r\n\r\nclass UserServices {\r\n  static async registerUser(\r\n    user: RegisterUser\r\n  ): Promise<AxiosResponse<AxiosResponse>> {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/Account/register`, {\r\n        email: user.email,\r\n        password: user.password,\r\n        personName: user.personName,\r\n        phoneNumber: user.phoneNumber,\r\n        confirmPassword: user.confirmPassword\r\n          \r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n  \r\n      });\r\n      return response;\r\n  \r\n    \r\n    } catch (error) {\r\n      throw error;\r\n      \r\n    }\r\n  }\r\n\r\n  static async loginUser(\r\n    user: LoginUser\r\n  ): Promise<AxiosResponse<AxiosResponse>> {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/Account/login`, {\r\n        email: user.email,\r\n        password: user.password\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error) {   \r\n      throw error;\r\n    }\r\n  }\r\n  static async logoutUser(): Promise<AxiosResponse<AxiosResponse>> {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/Account/Logout`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\nexport default UserServices;"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM;AAEN,MAAM;IACJ,aAAa,aACX,IAAkB,EACqB;QACvC,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,iBAAiB,CAAC,EAAE;gBAC/D,OAAO,KAAK,KAAK;gBACjB,UAAU,KAAK,QAAQ;gBACvB,YAAY,KAAK,UAAU;gBAC3B,aAAa,KAAK,WAAW;gBAC7B,iBAAiB,KAAK,eAAe;YAEvC,GAAG;gBACD,SAAS;oBACP,gBAAgB;gBAClB;YAEF;YACA,OAAO;QAGT,EAAE,OAAO,OAAO;YACd,MAAM;QAER;IACF;IAEA,aAAa,UACX,IAAe,EACwB;QACvC,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,cAAc,CAAC,EAAE;gBAC5D,OAAO,KAAK,KAAK;gBACjB,UAAU,KAAK,QAAQ;YACzB,GAAG;gBACD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IACA,aAAa,aAAoD;QAC/D,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,eAAe,CAAC;YAC5D,OAAO;QACT,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;AACF;uCACe","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///D:/Itla/Proyecto%20final/proyecto-final-tds/src/financia_web/Components/LoginForm.tsx"],"sourcesContent":["'use client'\r\nimport React from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport { useRouter } from 'next/navigation';\r\nimport UserServices from '../services/UserServices';\r\n\r\nconst LoginForm = () => {\r\n    const router = useRouter();\r\n    \r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const formData = new FormData(e.currentTarget);\r\n        const data = {\r\n            email: formData.get('email') as string,\r\n            password: formData.get('password') as string\r\n        }\r\n        const response = await UserServices.loginUser(data)\r\n        if(response.status === 200){\r\n            router.push('/Dashboard')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='flex flex-col items-center justify-center gap-y-4'>\r\n            <TextField \r\n                id=\"email\" \r\n                label=\"Correo electrónico\" \r\n                variant=\"standard\" \r\n                type=\"email\" \r\n                name=\"email\" \r\n                required\r\n            />\r\n            <TextField \r\n                id=\"password\" \r\n                label=\"Contraseña\" \r\n                variant=\"standard\" \r\n                type=\"password\" \r\n                name=\"password\" \r\n                required\r\n            />\r\n            <button \r\n                type=\"submit\"\r\n                className=\"bg-[rgb(31,133,119)] w-[200px] h-[50px] text-xl rounded-lg text-white font-medium cursor-pointer hover:opacity-80\"\r\n            >\r\n                Iniciar sesión\r\n            </button>\r\n            <p>\r\n                ¿No tienes una cuenta? <span className=\"text-[rgb(31,133,119)] cursor-pointer\" onClick={() => router.push('/Signup')}>Regístrate</span>\r\n            </p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,YAAY;IACd,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,MAAM,WAAW,IAAI,SAAS,EAAE,aAAa;QAC7C,MAAM,OAAO;YACT,OAAO,SAAS,GAAG,CAAC;YACpB,UAAU,SAAS,GAAG,CAAC;QAC3B;QACA,MAAM,WAAW,MAAM,wHAAA,CAAA,UAAY,CAAC,SAAS,CAAC;QAC9C,IAAG,SAAS,MAAM,KAAK,KAAI;YACvB,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACpC,8OAAC,kKAAA,CAAA,UAAS;gBACN,IAAG;gBACH,OAAM;gBACN,SAAQ;gBACR,MAAK;gBACL,MAAK;gBACL,QAAQ;;;;;;0BAEZ,8OAAC,kKAAA,CAAA,UAAS;gBACN,IAAG;gBACH,OAAM;gBACN,SAAQ;gBACR,MAAK;gBACL,MAAK;gBACL,QAAQ;;;;;;0BAEZ,8OAAC;gBACG,MAAK;gBACL,WAAU;0BACb;;;;;;0BAGD,8OAAC;;oBAAE;kCACwB,8OAAC;wBAAK,WAAU;wBAAwC,SAAS,IAAM,OAAO,IAAI,CAAC;kCAAY;;;;;;;;;;;;;;;;;;AAItI;uCAEe","debugId":null}}]
}